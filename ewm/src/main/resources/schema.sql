    DROP TABLE IF EXISTS users CASCADE;
CREATE TABLE IF NOT EXISTS users (
  user_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (user_id),
  CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

    DROP TABLE IF EXISTS categories CASCADE;
CREATE TABLE IF NOT EXISTS categories (
    category_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255) NOT NULL,
    CONSTRAINT pk_category PRIMARY KEY (category_id),
    CONSTRAINT UQ_CATEGORY_NAME UNIQUE (name)
);

    DROP TABLE IF EXISTS events CASCADE;
CREATE TABLE IF NOT EXISTS events (
    event_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    annotation VARCHAR,
    category BIGINT,
    confirmed_request BIGINT,
    created_on TIMESTAMP WITHOUT TIME ZONE,
    description VARCHAR,
    event_date TIMESTAMP WITHOUT TIME ZONE,
    users BIGINT,
    lat REAL,
    lon REAL,
    paid BOOLEAN,
    participant_limit INTEGER,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    request_moderation BOOLEAN,
    states VARCHAR,
    title VARCHAR,
    views BIGINT,
    CONSTRAINT pk_events PRIMARY KEY (event_id),
    CONSTRAINT fk__events__user FOREIGN KEY (users) REFERENCES users (user_id),
    CONSTRAINT fk__events__category FOREIGN KEY (category) REFERENCES categories (category_id)
);

    DROP TABLE IF EXISTS requests CASCADE;
CREATE TABLE IF NOT EXISTS requests (
    request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    request_created TIMESTAMP WITHOUT TIME ZONE,
    event BIGINT,
    requester BIGINT,
    request_status VARCHAR,
    CONSTRAINT pk_requests PRIMARY KEY (request_id),
    CONSTRAINT fk__requests__requester FOREIGN KEY (requester) REFERENCES users (user_id),
    CONSTRAINT fk__requests__event FOREIGN KEY (event) REFERENCES events (event_id)
);